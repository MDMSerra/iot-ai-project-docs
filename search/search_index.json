{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83d\udce1 IoT con AI - Documentaci\u00f3n","text":"<p>Esta documentaci\u00f3n cubre el desarrollo de un sistema IoT con integraci\u00f3n de inteligencia artificial para la recolecci\u00f3n, procesamiento y toma de decisiones basada en datos.</p>"},{"location":"#introduccion","title":"\ud83d\udccc Introducci\u00f3n","text":"<p>El Internet de las Cosas (IoT) permite la conexi\u00f3n de dispositivos f\u00edsicos a la red, recopilando y transmitiendo datos en tiempo real. Al combinarlo con inteligencia artificial (AI), se pueden analizar grandes vol\u00famenes de datos y tomar decisiones automatizadas.</p> <p>\ud83d\udd39 Objetivo: Dise\u00f1ar y desarrollar un sistema IoT con procesamiento en backend e integraci\u00f3n de un modelo de AI para an\u00e1lisis de datos. \ud83d\udd39 Hardware: Se utilizar\u00e1n microcontroladores como ESP32, Arduino y PSoC5 para la adquisici\u00f3n de datos. \ud83d\udd39 Software: Se implementar\u00e1 en Python, JavaScript y frameworks como TensorFlow Lite para la inferencia de AI.</p>"},{"location":"#componentes-del-proyecto","title":"\ud83d\udee0\ufe0f Componentes del Proyecto","text":"<p>El sistema se compone de:</p>"},{"location":"#1-sensores","title":"1\ufe0f\u20e3 Sensores","text":"<p>Los sensores recopilan informaci\u00f3n del entorno. Algunos ejemplos son:</p> <ul> <li>\ud83c\udf21 DHT22: Temperatura y humedad.</li> <li>\ud83d\udcf7 C\u00e1mara OV2640: Captura de im\u00e1genes para procesamiento con AI.</li> <li>\ud83d\udca1 LDR: Medici\u00f3n de intensidad lum\u00ednica.</li> <li>\ud83c\udfcb Celdas de carga: Para pesaje y monitoreo de presi\u00f3n.</li> </ul>"},{"location":"#2-dispositivos-de-procesamiento","title":"2\ufe0f\u20e3 Dispositivos de Procesamiento","text":"<p>Los datos se procesan en microcontroladores y servidores:</p> <ul> <li>ESP32 \u2192 Preprocesamiento b\u00e1sico y conexi\u00f3n WiFi/Bluetooth.</li> <li>Servidor Backend (Raspberry Pi o Cloud) \u2192 Procesamiento avanzado con AI.</li> </ul>"},{"location":"#3-actuadores","title":"3\ufe0f\u20e3 Actuadores","text":"<p>Los actuadores responden a comandos basados en el an\u00e1lisis de los datos. Ejemplos:</p> <ul> <li>\ud83d\udd14 Alarmas activadas por detecci\u00f3n de patrones an\u00f3malos.</li> <li>\ud83d\udea6 Luces y motores activados seg\u00fan datos procesados.</li> <li>\ud83d\udd27 V\u00e1lvulas inteligentes en sistemas industriales.</li> </ul>"},{"location":"#flujo-de-datos-iot-ai","title":"\ud83d\udd00 Flujo de Datos IoT + AI","text":"<p>El flujo del sistema se puede representar as\u00ed:</p> <pre><code>graph TD;\n  A[Sensor] --&gt;|Datos| B[ESP32];\n  B --&gt;|Preprocesamiento| C[Servidor];\n  C --&gt;|Inferencia AI| D[Decisi\u00f3n];\n  D --&gt;|Comando| E[Actuador];</code></pre> <p>\u2705 Los datos de los sensores se procesan en el ESP32 antes de ser enviados al backend. \u2705 El servidor ejecuta modelos de AI para predecir o clasificar datos en tiempo real. \u2705 El resultado del an\u00e1lisis se traduce en acciones sobre actuadores.</p>"},{"location":"#procesamiento-con-inteligencia-artificial","title":"\ud83d\udcca Procesamiento con Inteligencia Artificial","text":"<p>Los datos del sistema se analizan con Machine Learning y Deep Learning. Algunos modelos aplicables:</p> <ul> <li>\ud83d\udcc8 Regresi\u00f3n Lineal \u2192 Para predecir valores continuos, como temperatura futura.</li> <li>\ud83c\udff7\ufe0f Clasificaci\u00f3n con Redes Neuronales \u2192 Para distinguir entre eventos normales y an\u00f3malos.</li> <li>\ud83c\udfad Visi\u00f3n Computacional \u2192 Detecci\u00f3n de objetos en im\u00e1genes con YOLO o MobileNet.</li> </ul>"},{"location":"#ejemplo-de-aplicacion-mantenimiento-predictivo","title":"\ud83d\udd25 Ejemplo de aplicaci\u00f3n: Mantenimiento Predictivo","text":"<ol> <li>Se recopilan datos de vibraciones en motores.</li> <li>Se procesan con una red neuronal para detectar patrones inusuales.</li> <li>Se emite una alerta antes de que ocurra una falla.</li> </ol>"},{"location":"#plataformas-y-frameworks-utilizados","title":"\ud83d\ude80 Plataformas y Frameworks Utilizados","text":"<p>Para el desarrollo de este sistema, se utilizar\u00e1n las siguientes herramientas:</p> <ul> <li>\ud83d\udd39 Microcontroladores: Arduino, ESP32, PSoC5.</li> <li>\ud83d\udd39 Backend: Python con Flask o FastAPI.</li> <li>\ud83d\udd39 Bases de datos: InfluxDB, Firebase o PostgreSQL.</li> <li>\ud83d\udd39 Frameworks de AI: TensorFlow Lite, OpenCV para visi\u00f3n.</li> <li>\ud83d\udd39 Comunicaci\u00f3n: MQTT, HTTP y WebSockets.</li> </ul>"},{"location":"#integracion-backend-y-frontend","title":"\u26a1 Integraci\u00f3n Backend y Frontend","text":"<p>El sistema IoT se comunica con un backend que maneja los datos en tiempo real y una interfaz web para visualizaci\u00f3n.</p> <ul> <li>\ud83d\udce1 Backend: API con Flask/FastAPI para recibir y procesar datos.</li> <li>\ud83d\udcca Frontend: Dashboard en React o una interfaz ligera en MkDocs.</li> </ul> <p>Ejemplo de interacci\u00f3n: 1\ufe0f\u20e3 El ESP32 env\u00eda datos de temperatura al backend. 2\ufe0f\u20e3 El backend los analiza con AI y decide si activar una alarma. 3\ufe0f\u20e3 La informaci\u00f3n se muestra en un dashboard en tiempo real.</p>"},{"location":"#interfaz-web-de-control","title":"\ud83d\udda5\ufe0f Interfaz Web de Control","text":"<p>El sistema contar\u00e1 con una interfaz de usuario que mostrar\u00e1 los datos en tiempo real, gr\u00e1ficos y permitir\u00e1 enviar comandos manuales a los dispositivos IoT.</p> <p>\u2705 \ud83d\udcca Gr\u00e1ficos de sensores en vivo. \u2705 \ud83c\udfed Monitoreo de dispositivos conectados. \u2705 \ud83d\udd14 Notificaciones y alertas en caso de anomal\u00edas.</p>"},{"location":"#despliegue-y-mantenimiento","title":"\ud83d\udd27 Despliegue y Mantenimiento","text":""},{"location":"#fases-del-despliegue","title":"\ud83d\udd39 Fases del Despliegue","text":"<ol> <li>Desarrollo y prueba en local con <code>mkdocs serve</code>.</li> <li>Configuraci\u00f3n de despliegue en GitHub Pages.</li> <li>Integraci\u00f3n con servidor en la nube o Raspberry Pi.</li> <li>Monitoreo y ajustes de rendimiento.</li> </ol>"},{"location":"#botones-interactivos","title":"Botones interactivos","text":"<p>\ud83d\udccc Bot\u00f3n para volver arriba y activar el modo lector:</p> <p> arrow_upward </p> <p>\ud83d\udcd6 Modo Lector</p> A A+ A++"},{"location":"about/","title":"Sobre el Proyecto","text":""},{"location":"fase1/","title":"Dise\u00f1o de Circuitos","text":""},{"location":"fase2/","title":"Desarrollo Web IoT","text":""},{"location":"fase3/","title":"Implementaci\u00f3n de AI","text":""},{"location":"recursos/","title":"Recursos","text":""}]}